{
    "contents" : "rankall <- function(outcome, num = \"best\") {\n        # initialize data frame which stores the result\n        df_result <- data.frame(hospital=as.character(), state=as.character())\n        \n        ## Read outcome data\n        data_frame <- read.csv(\"outcome-of-care-measures.csv\", \n                               colClasses = \"character\",\n                               na.strings = \"Not Available\")\n   \n        ## Check that outcome is valid\n                \n        # check for outcome\n        if (outcome == \"heart failure\") {\n                selCol = 17\n        } else {\n                if (outcome == \"heart attack\") {\n                        selCol = 11\n                } else {\n                        if (outcome == \"pneumonia\") {\n                                selCol = 23\n                        } else {\n                                stop (\"invalid outcome\")\n                        }\n                }\n        }\n        \n        # filter rows with NAs for specific outcome\n        data_frame <- data_frame[!is.na(data_frame[,selCol]),]\n        \n        # translate \"best\" to numeric value\n        if (num == \"best\") {\n                num <- 1\n        }\n        \n        # convert to numeric for sorting\n        data_frame[, selCol] <- as.numeric(data_frame[, selCol])\n        \n        ## For each state, find the hospital of the given rank\n        \n        for (strState in sort(unique(data_frame[,7]))) {\n                # select rows with actual state\n                stateSubset <- data_frame[data_frame$State == strState,]\n\n                # Sort according to outcome\n                stateSubset <-stateSubset[order(stateSubset[,selCol],\n                                                stateSubset$Hospital.Name),]\n\n                if (num == \"worst\") {\n                        myNum <- nrow(stateSubset)\n                } else {\n                        if (num <= nrow(stateSubset)) {\n                                myNum <- num\n                        } else {\n                                myNum <- NA\n                        }\n                }\n\n                if (is.na(myNum)) {\n                        strHospital <- NA\n                } else {\n                        strHospital <- stateSubset[myNum, 2]\n                }\n\n                df_result <- rbind(df_result,\n                                   data.frame(hospital=as.character(strHospital),\n                                              state=as.character(strState),\n                                              row.names=strState))\n         }\n        ## Return a data frame with the hospital names and the\n        ## (abbreviated) state name\n        return(df_result)\n}",
    "created" : 1411591590619.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1956207757",
    "id" : "D342715A",
    "lastKnownWriteTime" : 1411601892,
    "path" : "C:/Data/priv/prg/git/Programming Assignment 3/rankall.R",
    "project_path" : "rankall.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}