{
    "contents" : "best <- function(state, outcome) {\n        ## Read outcome data\n#         data_frame <- read.csv(\"outcome-of-care-measures.csv\")\n        data_frame <- read.csv(\"outcome-of-care-measures.csv\", colClasses = \"character\")\n        \n        ## Check that state and outcome are valid\n        if (!(state %in% unique(data_frame[,\"State\"]))) {\n                stop (\"invalid state\")\n        }\n#         if (!(outcome %in% c(\"heart failure\", \"heart attack\", \"pneumonia\"))) {\n#                 stop (\"invalid outcome\")\n#         }\n#         \n        if (outcome == \"heart failure\") {\n                selCol = 17\n        } else {\n                if (outcome == \"heart attack\") {\n                        selCol = 11\n                } else {\n                        if (outcome == \"pneumonia\") {\n                                selCol = 23\n                        } else {\n                                stop (\"invalid outcome\")\n                        }\n                }\n        }\n\n\n        ## Return hospital name in that state with lowest 30-day death\n        ## rate\n        # select rows with correct state\n        data_frame <- data_frame[data_frame$State == state,]\n        \n        # convert to numeric for sorting\n        suppressWarnings(data_frame[, selCol] <- as.numeric(data_frame[, selCol]))\n        \n        # Sort\n        data_frame <-data_frame[order(data_frame[,selCol], data_frame$Hospital.Name),]\n\n#         return (as.character(data_frame[1, 2]))\n        # return(data_frame)\n        return (data_frame[1, 2])\n\n        \n}",
    "created" : 1411501308266.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3145709523",
    "id" : "F042B9B9",
    "lastKnownWriteTime" : 1411567109,
    "path" : "C:/Data/priv/prg/git/Programming Assignment 3/best.R",
    "project_path" : "best.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}